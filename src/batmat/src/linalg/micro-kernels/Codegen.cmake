function(batmat_codegen_micro_kernels tgt headers)

    set(VECTOR_LENGTHS_double 1 4 8)
    set(VECTOR_LENGTHS_float 1 4 8 16)
    set(SIGNS_gemm "false" "true")
    set(SIGNS_trsm "false")

    add_library(${tgt}-micro-kernels INTERFACE)
    list(APPEND BATMAT_CODEGEN_TARGETS ${tgt}-micro-kernels)
    set(OUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/${tgt}/codegen")
    set(TPP_DIR "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../../include/batmat/linalg/micro-kernels")
    foreach(op "gemm" "trsm")
        add_library(${tgt}-micro-kernels-${op} STATIC)
        target_link_libraries(${tgt}-micro-kernels-${op} PRIVATE ${headers} warnings)
        target_precompile_headers(${tgt}-micro-kernels-${op} PRIVATE "${TPP_DIR}/${op}.tpp")
        target_link_libraries(${tgt}-micro-kernels INTERFACE ${tgt}-micro-kernels-${op})
        if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
            target_compile_options(${tgt}-micro-kernels-${op} PRIVATE "-ffp-contract=fast")
        endif()
        list(APPEND BATMAT_CODEGEN_TARGETS ${tgt}-micro-kernels-${op})
        foreach(DType "float" "double")
            foreach(Negate IN LISTS SIGNS_${op})
                foreach(I IN LISTS VECTOR_LENGTHS_${DType})
                    set(Abi "deduce_t<${DType}, ${I}>")
                    if (I EQUAL 1)
                        set(Abi "scalar")
                    endif()
                    configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/${op}.cpp.in" "${OUT_DIR}/${op}-${DType}-${I}-${Negate}.cpp" @ONLY)
                    target_sources(${tgt}-micro-kernels-${op} PRIVATE "${OUT_DIR}/${op}-${DType}-${I}-${Negate}.cpp")
                endforeach()
            endforeach()
        endforeach()
    endforeach()

    set(BATMAT_CODEGEN_TARGETS ${BATMAT_CODEGEN_TARGETS} PARENT_SCOPE)
endfunction()
