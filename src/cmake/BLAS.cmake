include(CheckTypeSize)

function(koqkatoo_set_mkl_interface)
    set(MKL_INTERFACE_int32_t "lp64")
    set(MKL_INTERFACE_int64_t "ilp64")
    set(MKL_INTERFACE_int "lp64")
    set(MKL_INTERFACE_long "ilp64")
    set(MKL_INTERFACE_long-long "ilp64")
    string(REPLACE " " "-" INDEX_TYPE "${KOQKATOO_DENSE_INDEX_TYPE}")
    if (NOT DEFINED MKL_INTERFACE_${INDEX_TYPE})
        message(SEND_ERROR "Unsupported index type ${KOQKATOO_DENSE_INDEX_TYPE}")
    endif()
    set(MKL_INTERFACE "${MKL_INTERFACE_${INDEX_TYPE}}" PARENT_SCOPE)
endfunction()

add_library(blas-lapack-lib INTERFACE)
target_compile_definitions(blas-lapack-lib INTERFACE
    $<$<BOOL:${KOQKATOO_WITH_MKL}>:KOQKATOO_WITH_MKL>)
if (KOQKATOO_WITH_MKL)
    set(KOQKATOO_MKLROOT_DEFINED false)
     if (NOT "${KOQKATOO_MKLROOT}" STREQUAL "")
        set(KOQKATOO_MKLROOT_DEFINED true)
        string(REPLACE "$ENV{HOME}" "\$ENV{HOME}"
            KOQKATOO_MKLROOT_ESCAPED ${KOQKATOO_MKLROOT})
    endif()
    if (NOT DEFINED MKL_THREADING)
        set(MKL_THREADING "gnu_thread")
    endif()
    if (NOT DEFINED MKL_LINK)
        set(MKL_LINK "static")
    endif()
    if (NOT DEFINED MKL_INTERFACE)
        koqkatoo_set_mkl_interface()
    endif()
    set(KOQKATOO_MKLROOT_DEFINED ${KOQKATOO_MKLROOT_DEFINED} CACHE INTERNAL "")
    set(KOQKATOO_MKLROOT_ESCAPED ${KOQKATOO_MKLROOT_ESCAPED} CACHE INTERNAL "")
    if (KOQKATOO_MKLROOT_DEFINED AND NOT DEFINED ENV{MKLROOT})
        set(ENV{MKLROOT} "${KOQKATOO_MKLROOT}")
    endif()
    if (DEFINED ENV{MKLROOT})
        list(PREPEND CMAKE_FIND_ROOT_PATH "$ENV{MKLROOT}")
    endif()
    find_package(MKL CONFIG REQUIRED)
    target_link_libraries(blas-lapack-lib INTERFACE MKL::MKL)
elseif(KOQKATOO_WITH_OPENBLAS)
    find_package(OpenBLAS REQUIRED)
    target_link_libraries(blas-lapack-lib INTERFACE OpenBLAS::OpenBLAS)
else()
    find_package(BLAS REQUIRED)
    find_package(LAPACK REQUIRED)
    target_link_libraries(blas-lapack-lib INTERFACE BLAS::BLAS LAPACK::LAPACK)
endif()
add_library(koqkatoo::blas-lapack-lib ALIAS blas-lapack-lib)
