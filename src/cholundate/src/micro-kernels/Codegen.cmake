function(koqkatoo_coroutine_flags file)
    if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109867
        set_source_files_properties(${file} PROPERTIES COMPILE_OPTIONS "-Wno-switch-default")
    endif()
endfunction()

function(codegen_cholundate_microkernels tgt headers)

    add_library(${tgt}-microkernels INTERFACE)
    list(APPEND KOQKATOO_CODEGEN_TARGETS ${tgt}-microkernels)
    set(OUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/${tgt}/codegen")
    set(TPP_DIR "${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../../include/koqkatoo/cholundate/micro-kernels")
    foreach(alg "householder-updowndate")
        add_library(${tgt}-impl-${alg} STATIC)
        target_link_libraries(${tgt}-impl-${alg} PRIVATE ${headers} warnings)
        foreach(variant "serial" "naive")
            target_precompile_headers(${tgt}-impl-${alg} PRIVATE "${TPP_DIR}/../${alg}-${variant}.tpp")
        endforeach()
        target_link_libraries(${tgt}-microkernels INTERFACE ${tgt}-impl-${alg})
        list(APPEND KOQKATOO_CODEGEN_TARGETS ${tgt}-impl-${alg})
        foreach (op "diag" "full" "tail")
            add_library(${tgt}-microkernels-${alg}-${op} STATIC)
            target_link_libraries(${tgt}-microkernels-${alg}-${op} PRIVATE ${headers} warnings)
            target_precompile_headers(${tgt}-microkernels-${alg}-${op} PRIVATE "${TPP_DIR}/${alg}-${op}.tpp")
            target_link_libraries(${tgt}-impl-${alg} PRIVATE ${tgt}-microkernels-${alg}-${op})
            list(APPEND KOQKATOO_CODEGEN_TARGETS ${tgt}-microkernels-${alg}-${op})
        endforeach()
        target_link_libraries(${tgt}-microkernels INTERFACE ${tgt}-impl-${alg})
        foreach(R 32 16 12 8 4 2 1)
            configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/${alg}-diag.cpp.in" "${OUT_DIR}/${alg}-diag-${R}.cpp" @ONLY)
            target_sources(${tgt}-microkernels-${alg}-diag PRIVATE "${OUT_DIR}/${alg}-diag-${R}.cpp")
            foreach(S 32 24 16 12 8 4 2 1)
                configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/${alg}-tail.cpp.in" "${OUT_DIR}/${alg}-tail-${R}-${S}.cpp" @ONLY)
                target_sources(${tgt}-microkernels-${alg}-tail PRIVATE "${OUT_DIR}/${alg}-tail-${R}-${S}.cpp")
                configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../${alg}-serial.cpp.in" "${OUT_DIR}/${alg}-serial-${R}-${S}.cpp" @ONLY)
                target_sources(${tgt}-impl-${alg} PRIVATE "${OUT_DIR}/${alg}-serial-${R}-${S}.cpp")
                configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../${alg}-naive.cpp.in" "${OUT_DIR}/${alg}-naive-${R}-${S}.cpp" @ONLY)
                target_sources(${tgt}-impl-${alg} PRIVATE "${OUT_DIR}/${alg}-naive-${R}-${S}.cpp")
            endforeach()
        endforeach()
        foreach(R RANGE 1 32)
            configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/${alg}-full.cpp.in" "${OUT_DIR}/${alg}-full-${R}.cpp" @ONLY)
            target_sources(${tgt}-microkernels-${alg}-full PRIVATE "${OUT_DIR}/${alg}-full-${R}.cpp")
        endforeach()
        foreach(R 7 6 5 3)
            configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/${alg}-diag.cpp.in" "${OUT_DIR}/${alg}-diag-${R}.cpp" @ONLY)
            target_sources(${tgt}-microkernels-${alg}-diag PRIVATE "${OUT_DIR}/${alg}-diag-${R}.cpp")
            foreach(S 32 24 16 12 8 4 2 1)
                configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/${alg}-tail.cpp.in" "${OUT_DIR}/${alg}-tail-${R}-${S}.cpp" @ONLY)
                target_sources(${tgt}-microkernels-${alg}-tail PRIVATE "${OUT_DIR}/${alg}-tail-${R}-${S}.cpp")
            endforeach()
        endforeach()
    endforeach()

    if (KOQKATOO_WITH_LIBFORK)
        add_library(${tgt}-impl-householder-updowndate-libfork STATIC)
        target_link_libraries(${tgt}-impl-householder-updowndate-libfork PRIVATE ${headers} warnings)
        target_precompile_headers(${tgt}-impl-householder-updowndate-libfork PRIVATE "${TPP_DIR}/../householder-updowndate-libfork.tpp")
        find_package(libfork CONFIG REQUIRED)
        foreach(R 32 16 12 8 4 2 1)
            foreach(S 32 24 16 12 8 4 2 1)
                math(EXPR S_R_REM "${S} % ${R}")
                if (S_R_REM EQUAL 0)
                    configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../householder-updowndate-libfork.cpp.in" "${OUT_DIR}/householder-updowndate-libfork-${R}-${S}.cpp" @ONLY)
                    koqkatoo_coroutine_flags("${OUT_DIR}/householder-updowndate-libfork-${R}-${S}.cpp")
                    target_sources(${tgt}-impl-householder-updowndate-libfork PRIVATE "${OUT_DIR}/householder-updowndate-libfork-${R}-${S}.cpp")
                endif()
            endforeach()
        endforeach()
        target_link_libraries(${tgt}-impl-householder-updowndate-libfork PRIVATE libfork::libfork)
        foreach (op "diag" "full" "tail")
            target_link_libraries(${tgt}-impl-householder-updowndate-libfork PRIVATE ${tgt}-microkernels-householder-updowndate-${op})
        endforeach()
        target_link_libraries(${tgt}-microkernels INTERFACE ${tgt}-impl-householder-updowndate-libfork)
        list(APPEND KOQKATOO_CODEGEN_TARGETS ${tgt}-impl-householder-updowndate-libfork)
    endif()

    add_library(${tgt}-impl-householder-updowndate-static STATIC)
    target_link_libraries(${tgt}-impl-householder-updowndate-static PRIVATE ${headers} warnings)
    target_precompile_headers(${tgt}-impl-householder-updowndate-static PRIVATE "${TPP_DIR}/../householder-updowndate-static.tpp")
    foreach(R 32 16 12 8 4 2 1)
        foreach(S 32 24 16 12 8 4 2 1)
            math(EXPR S_R_REM "${S} % ${R}")
            if (S_R_REM EQUAL 0)
                configure_file("${CMAKE_CURRENT_FUNCTION_LIST_DIR}/../householder-updowndate-static.cpp.in" "${OUT_DIR}/householder-updowndate-static-${R}-${S}.cpp" @ONLY)
                koqkatoo_coroutine_flags("${OUT_DIR}/householder-updowndate-static-${R}-${S}.cpp")
                target_sources(${tgt}-impl-householder-updowndate-static PRIVATE "${OUT_DIR}/householder-updowndate-static-${R}-${S}.cpp")
            endif()
        endforeach()
    endforeach()
    foreach (op "diag" "full" "tail")
        target_link_libraries(${tgt}-impl-householder-updowndate-static PRIVATE ${tgt}-microkernels-householder-updowndate-${op})
    endforeach()
    target_link_libraries(${tgt}-microkernels INTERFACE ${tgt}-impl-householder-updowndate-static)
    list(APPEND KOQKATOO_CODEGEN_TARGETS ${tgt}-impl-householder-updowndate-static)

    set(KOQKATOO_CODEGEN_TARGETS ${KOQKATOO_CODEGEN_TARGETS} PARENT_SCOPE)
endfunction()
