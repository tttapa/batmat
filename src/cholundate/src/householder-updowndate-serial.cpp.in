#include <koqkatoo/cholundate/householder-updowndate-serial.tpp>

namespace koqkatoo::cholundate::householder::inline serial {

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 0}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 1}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 2}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 3}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 4}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 5}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 6}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 7}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 8}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 2}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 4}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 8}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 16}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 32}, Update>(MutableRealMatrixView L, MutableRealMatrixView A, Update signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 0}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 1}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 2}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 3}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 4}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 5}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 6}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 7}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 8}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 2}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 4}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 8}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 16}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 32}, Downdate>(MutableRealMatrixView L, MutableRealMatrixView A, Downdate signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 0}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 1}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 2}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 3}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 4}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 5}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 6}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 7}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 8}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 2}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 4}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 8}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 16}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 32}, UpDowndate>(MutableRealMatrixView L, MutableRealMatrixView A, UpDowndate signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 0}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 1}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 2}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 3}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 4}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 5}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 6}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 7}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .prefetch_dist_col_a = 8}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);

template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 2}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 4}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 8}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 16}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);
template void updowndate_blocked<{.block_size_r = @R@, .block_size_s = @S@, .num_blocks_r = 32}, DownUpdate>(MutableRealMatrixView L, MutableRealMatrixView A, DownUpdate signs);

} // namespace koqkatoo::cholundate::householder::inline serial
